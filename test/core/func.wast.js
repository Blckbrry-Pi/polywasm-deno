
// func.wast:3
let $1 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\xbc\x81\x80\x80\x00\x1c\x60\x00\x00\x60\x00\x00\x60\x00\x01\x7f\x60\x01\x7f\x00\x60\x03\x7f\x7c\x7f\x01\x7f\x60\x00\x00\x60\x03\x7f\x7c\x7e\x00\x60\x02\x7f\x7c\x00\x60\x05\x7f\x7d\x7e\x7f\x7c\x00\x60\x00\x03\x7f\x7c\x7d\x60\x00\x02\x7f\x7c\x60\x00\x05\x7f\x7d\x7e\x7f\x7c\x60\x04\x7f\x7d\x7e\x7f\x03\x7f\x7e\x7f\x60\x00\x01\x7e\x60\x00\x01\x7d\x60\x00\x01\x7c\x60\x02\x7f\x7f\x01\x7f\x60\x02\x7e\x7e\x01\x7e\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x60\x06\x7d\x7f\x7e\x7f\x7c\x7f\x01\x7c\x60\x00\x03\x7f\x7f\x7f\x60\x00\x02\x7f\x7e\x60\x01\x7f\x01\x7f\x60\x01\x7f\x02\x7f\x7e\x60\x01\x7f\x02\x7f\x7f\x60\x00\x02\x7f\x7f\x60\x11\x7f\x7e\x7d\x7d\x7f\x7c\x7d\x7f\x7f\x7f\x7d\x7c\x7c\x7c\x7f\x7f\x7d\x10\x7c\x7d\x7f\x7f\x7f\x7e\x7d\x7f\x7f\x7d\x7c\x7c\x7f\x7d\x7f\x7c\x03\xe2\x80\x80\x80\x00\x61\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x03\x06\x07\x08\x00\x00\x02\x09\x0a\x0b\x01\x02\x03\x04\x02\x03\x04\x00\x05\x0c\x00\x02\x0d\x0e\x0f\x02\x0d\x0e\x0f\x0f\x10\x11\x12\x13\x10\x11\x12\x13\x14\x00\x00\x02\x0d\x0e\x0f\x0a\x15\x00\x02\x16\x00\x02\x0d\x0e\x0f\x0a\x15\x02\x16\x00\x02\x0d\x0e\x0f\x0a\x15\x02\x16\x03\x17\x18\x03\x17\x18\x03\x17\x19\x1b\x02\x0d\x0e\x0f\x07\x94\x89\x80\x80\x00\x46\x01\x66\x00\x02\x01\x67\x00\x04\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x31\x00\x19\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x32\x00\x1a\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x33\x00\x1b\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x34\x00\x1c\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x35\x00\x1d\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x36\x00\x1e\x0a\x74\x79\x70\x65\x2d\x75\x73\x65\x2d\x37\x00\x1f\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x69\x33\x32\x00\x24\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x69\x36\x34\x00\x25\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x66\x33\x32\x00\x26\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x66\x36\x34\x00\x27\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x33\x32\x00\x28\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x36\x34\x00\x29\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x33\x32\x00\x2a\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x36\x34\x00\x2b\x0b\x6c\x6f\x63\x61\x6c\x2d\x6d\x69\x78\x65\x64\x00\x2c\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x69\x33\x32\x00\x2d\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x69\x36\x34\x00\x2e\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x66\x33\x32\x00\x2f\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x66\x36\x34\x00\x30\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x33\x32\x00\x31\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x36\x34\x00\x32\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x33\x32\x00\x33\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x36\x34\x00\x34\x0b\x70\x61\x72\x61\x6d\x2d\x6d\x69\x78\x65\x64\x00\x35\x05\x65\x6d\x70\x74\x79\x00\x36\x0a\x76\x61\x6c\x75\x65\x2d\x76\x6f\x69\x64\x00\x37\x09\x76\x61\x6c\x75\x65\x2d\x69\x33\x32\x00\x38\x09\x76\x61\x6c\x75\x65\x2d\x69\x36\x34\x00\x39\x09\x76\x61\x6c\x75\x65\x2d\x66\x33\x32\x00\x3a\x09\x76\x61\x6c\x75\x65\x2d\x66\x36\x34\x00\x3b\x0d\x76\x61\x6c\x75\x65\x2d\x69\x33\x32\x2d\x66\x36\x34\x00\x3c\x11\x76\x61\x6c\x75\x65\x2d\x69\x33\x32\x2d\x69\x33\x32\x2d\x69\x33\x32\x00\x3d\x10\x76\x61\x6c\x75\x65\x2d\x62\x6c\x6f\x63\x6b\x2d\x76\x6f\x69\x64\x00\x3e\x0f\x76\x61\x6c\x75\x65\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x00\x3f\x13\x76\x61\x6c\x75\x65\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x2d\x69\x36\x34\x00\x40\x0c\x72\x65\x74\x75\x72\x6e\x2d\x65\x6d\x70\x74\x79\x00\x41\x0a\x72\x65\x74\x75\x72\x6e\x2d\x69\x33\x32\x00\x42\x0a\x72\x65\x74\x75\x72\x6e\x2d\x69\x36\x34\x00\x43\x0a\x72\x65\x74\x75\x72\x6e\x2d\x66\x33\x32\x00\x44\x0a\x72\x65\x74\x75\x72\x6e\x2d\x66\x36\x34\x00\x45\x0e\x72\x65\x74\x75\x72\x6e\x2d\x69\x33\x32\x2d\x66\x36\x34\x00\x46\x12\x72\x65\x74\x75\x72\x6e\x2d\x69\x33\x32\x2d\x69\x33\x32\x2d\x69\x33\x32\x00\x47\x10\x72\x65\x74\x75\x72\x6e\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x00\x48\x14\x72\x65\x74\x75\x72\x6e\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x2d\x69\x36\x34\x00\x49\x0b\x62\x72\x65\x61\x6b\x2d\x65\x6d\x70\x74\x79\x00\x4a\x09\x62\x72\x65\x61\x6b\x2d\x69\x33\x32\x00\x4b\x09\x62\x72\x65\x61\x6b\x2d\x69\x36\x34\x00\x4c\x09\x62\x72\x65\x61\x6b\x2d\x66\x33\x32\x00\x4d\x09\x62\x72\x65\x61\x6b\x2d\x66\x36\x34\x00\x4e\x0d\x62\x72\x65\x61\x6b\x2d\x69\x33\x32\x2d\x66\x36\x34\x00\x4f\x11\x62\x72\x65\x61\x6b\x2d\x69\x33\x32\x2d\x69\x33\x32\x2d\x69\x33\x32\x00\x50\x0f\x62\x72\x65\x61\x6b\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x00\x51\x13\x62\x72\x65\x61\x6b\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x2d\x69\x36\x34\x00\x52\x11\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x69\x66\x2d\x65\x6d\x70\x74\x79\x00\x53\x0f\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x69\x66\x2d\x6e\x75\x6d\x00\x54\x13\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x69\x66\x2d\x6e\x75\x6d\x2d\x6e\x75\x6d\x00\x55\x14\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x65\x6d\x70\x74\x79\x00\x56\x12\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x75\x6d\x00\x57\x16\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x75\x6d\x2d\x6e\x75\x6d\x00\x58\x1b\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x65\x73\x74\x65\x64\x2d\x65\x6d\x70\x74\x79\x00\x59\x19\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x65\x73\x74\x65\x64\x2d\x6e\x75\x6d\x00\x5a\x1d\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x65\x73\x74\x65\x64\x2d\x6e\x75\x6d\x2d\x6e\x75\x6d\x00\x5b\x09\x6c\x61\x72\x67\x65\x2d\x73\x69\x67\x00\x5c\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x69\x33\x32\x00\x5d\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x69\x36\x34\x00\x5e\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x66\x33\x32\x00\x5f\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x66\x36\x34\x00\x60\x0a\xbb\x89\x80\x80\x00\x61\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x01\x01\x7f\x0b\x84\x80\x80\x80\x00\x01\x01\x7f\x0b\x88\x80\x80\x80\x00\x03\x01\x7f\x01\x7c\x01\x7e\x0b\x86\x80\x80\x80\x00\x02\x01\x7f\x01\x7c\x0b\x8c\x80\x80\x80\x00\x05\x01\x7f\x01\x7d\x01\x7e\x01\x7f\x01\x7c\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b\x83\x80\x80\x80\x00\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x41\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x90\x80\x80\x80\x00\x06\x01\x7d\x01\x7f\x01\x7e\x01\x7f\x01\x7c\x01\x7f\x00\x00\x0b\x90\x80\x80\x80\x00\x06\x01\x7d\x01\x7f\x01\x7e\x01\x7f\x01\x7c\x01\x7f\x00\x00\x0b\x86\x80\x80\x80\x00\x01\x02\x7f\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x02\x7e\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x02\x7d\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x02\x7c\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x02\x7f\x20\x01\x0b\x86\x80\x80\x80\x00\x01\x02\x7e\x20\x01\x0b\x86\x80\x80\x80\x00\x01\x02\x7d\x20\x01\x0b\x86\x80\x80\x80\x00\x01\x02\x7c\x20\x01\x0b\xa8\x80\x80\x80\x00\x06\x01\x7d\x01\x7f\x01\x7e\x01\x7f\x01\x7c\x01\x7f\x20\x00\x8c\x1a\x20\x01\x45\x1a\x20\x02\x50\x1a\x20\x03\x45\x1a\x20\x04\x9a\x1a\x20\x05\x45\x1a\x20\x04\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x84\x80\x80\x80\x00\x00\x20\x00\x0b\x84\x80\x80\x80\x00\x00\x20\x01\x0b\x84\x80\x80\x80\x00\x00\x20\x01\x0b\x84\x80\x80\x80\x00\x00\x20\x01\x0b\x84\x80\x80\x80\x00\x00\x20\x01\x0b\x9c\x80\x80\x80\x00\x00\x20\x00\x8c\x1a\x20\x01\x45\x1a\x20\x02\x50\x1a\x20\x03\x45\x1a\x20\x04\x9a\x1a\x20\x05\x45\x1a\x20\x04\x0b\x82\x80\x80\x80\x00\x00\x0b\x84\x80\x80\x80\x00\x00\x10\x00\x0b\x85\x80\x80\x80\x00\x00\x41\xcd\x00\x0b\x85\x80\x80\x80\x00\x00\x42\xe1\x3c\x0b\x87\x80\x80\x80\x00\x00\x43\x66\x66\x9b\x42\x0b\x8b\x80\x80\x80\x00\x00\x44\xe1\x7a\x14\xae\x47\x71\x53\x40\x0b\x8e\x80\x80\x80\x00\x00\x41\xcd\x00\x44\x00\x00\x00\x00\x00\x00\x1c\x40\x0b\x88\x80\x80\x80\x00\x00\x41\x01\x41\x02\x41\x03\x0b\x89\x80\x80\x80\x00\x00\x02\x40\x10\x00\x10\x00\x0b\x0b\x8a\x80\x80\x80\x00\x00\x02\x7f\x10\x00\x41\xcd\x00\x0b\x0b\x8b\x80\x80\x80\x00\x00\x02\x16\x10\x00\x41\x01\x42\x02\x0b\x0b\x83\x80\x80\x80\x00\x00\x0f\x0b\x86\x80\x80\x80\x00\x00\x41\xce\x00\x0f\x0b\x86\x80\x80\x80\x00\x00\x42\xc6\x3d\x0f\x0b\x88\x80\x80\x80\x00\x00\x43\x66\x66\x9d\x42\x0f\x0b\x8c\x80\x80\x80\x00\x00\x44\x52\xb8\x1e\x85\xeb\xb1\x53\x40\x0f\x0b\x8f\x80\x80\x80\x00\x00\x41\xce\x00\x44\x52\xb8\x1e\x85\xeb\xb1\x53\x40\x0f\x0b\x89\x80\x80\x80\x00\x00\x41\x01\x41\x02\x41\x03\x0f\x0b\x8b\x80\x80\x80\x00\x00\x02\x7f\x10\x00\x41\xcd\x00\x0b\x0f\x0b\x8c\x80\x80\x80\x00\x00\x02\x16\x10\x00\x41\x01\x42\x02\x0b\x0f\x0b\x84\x80\x80\x80\x00\x00\x0c\x00\x0b\x87\x80\x80\x80\x00\x00\x41\xcf\x00\x0c\x00\x0b\x87\x80\x80\x80\x00\x00\x42\xab\x3e\x0c\x00\x0b\x89\x80\x80\x80\x00\x00\x43\xcd\xcc\x9f\x42\x0c\x00\x0b\x8d\x80\x80\x80\x00\x00\x44\xc3\xf5\x28\x5c\x8f\xf2\x53\x40\x0c\x00\x0b\x90\x80\x80\x80\x00\x00\x41\xcf\x00\x44\xc3\xf5\x28\x5c\x8f\xf2\x53\x40\x0c\x00\x0b\x8a\x80\x80\x80\x00\x00\x41\x01\x41\x02\x41\x03\x0c\x00\x0b\x8c\x80\x80\x80\x00\x00\x02\x7f\x10\x00\x41\xcd\x00\x0b\x0c\x00\x0b\x8d\x80\x80\x80\x00\x00\x02\x16\x10\x00\x41\x01\x42\x02\x0b\x0c\x00\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x0d\x00\x0b\x8b\x80\x80\x80\x00\x00\x41\x32\x20\x00\x0d\x00\x1a\x41\x33\x0b\x90\x80\x80\x80\x00\x00\x41\x32\x42\x33\x20\x00\x0d\x00\x1a\x1a\x41\x33\x42\x34\x0b\x89\x80\x80\x80\x00\x00\x20\x00\x0e\x02\x00\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x32\x20\x00\x0e\x01\x00\x00\x41\x33\x0b\x90\x80\x80\x80\x00\x00\x41\x32\x42\x33\x20\x00\x0e\x01\x00\x00\x41\x33\x42\x34\x0b\x8c\x80\x80\x80\x00\x00\x02\x40\x20\x00\x0e\x02\x00\x01\x00\x0b\x0b\x93\x80\x80\x80\x00\x00\x02\x7f\x41\x32\x20\x00\x0e\x02\x00\x01\x00\x41\x33\x0b\x41\x02\x6a\x0b\x97\x80\x80\x80\x00\x00\x02\x1a\x41\x32\x41\x33\x20\x00\x0e\x02\x00\x01\x00\x41\x33\x41\x7d\x0b\x6a\x41\x34\x0b\xa2\x80\x80\x80\x00\x00\x20\x05\x20\x02\x20\x00\x20\x08\x20\x07\x20\x01\x20\x03\x20\x09\x20\x04\x20\x06\x20\x0d\x20\x0b\x20\x0f\x20\x10\x20\x0e\x20\x0c\x0b\x86\x80\x80\x80\x00\x01\x01\x7f\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x01\x7e\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x01\x7d\x20\x00\x0b\x86\x80\x80\x80\x00\x01\x01\x7c\x20\x00\x0b");

// func.wast:241
assert_return(() => call($1, "type-use-1", []));

// func.wast:242
assert_return(() => call($1, "type-use-2", []), 0);

// func.wast:243
assert_return(() => call($1, "type-use-3", [1]));

// func.wast:244
assert_return(() => call($1, "type-use-4", [1, float64(4_607_182_418_800_017_408n), 1]), 0);

// func.wast:248
assert_return(() => call($1, "type-use-5", []), 0);

// func.wast:249
assert_return(() => call($1, "type-use-6", [1]));

// func.wast:250
assert_return(() => call($1, "type-use-7", [1, float64(4_607_182_418_800_017_408n), 1]), 0);

// func.wast:255
assert_return(() => call($1, "local-first-i32", []), 0);

// func.wast:256
assert_return(() => call($1, "local-first-i64", []), 0n);

// func.wast:257
assert_return(() => call($1, "local-first-f32", []), float32(0));

// func.wast:258
assert_return(() => call($1, "local-first-f64", []), float64(0n));

// func.wast:259
assert_return(() => call($1, "local-second-i32", []), 0);

// func.wast:260
assert_return(() => call($1, "local-second-i64", []), 0n);

// func.wast:261
assert_return(() => call($1, "local-second-f32", []), float32(0));

// func.wast:262
assert_return(() => call($1, "local-second-f64", []), float64(0n));

// func.wast:263
assert_return(() => call($1, "local-mixed", []), float64(0n));

// func.wast:265
assert_return(() => call($1, "param-first-i32", [2, 3]), 2);

// func.wast:268
assert_return(() => call($1, "param-first-i64", [2n, 3n]), 2n);

// func.wast:271
assert_return(() => call($1, "param-first-f32", [float32(1_073_741_824), float32(1_077_936_128)]), float32(1_073_741_824));

// func.wast:274
assert_return(() => call($1, "param-first-f64", [float64(4_611_686_018_427_387_904n), float64(4_613_937_818_241_073_152n)]), float64(4_611_686_018_427_387_904n));

// func.wast:277
assert_return(() => call($1, "param-second-i32", [2, 3]), 3);

// func.wast:280
assert_return(() => call($1, "param-second-i64", [2n, 3n]), 3n);

// func.wast:283
assert_return(() => call($1, "param-second-f32", [float32(1_073_741_824), float32(1_077_936_128)]), float32(1_077_936_128));

// func.wast:286
assert_return(() => call($1, "param-second-f64", [float64(4_611_686_018_427_387_904n), float64(4_613_937_818_241_073_152n)]), float64(4_613_937_818_241_073_152n));

// func.wast:290
assert_return(() => call($1, "param-mixed", [float32(1_065_353_216), 2, 3n, 4, float64(4_617_878_467_915_022_336n), 6]), float64(4_617_878_467_915_022_336n));

// func.wast:298
assert_return(() => call($1, "empty", []));

// func.wast:299
assert_return(() => call($1, "value-void", []));

// func.wast:300
assert_return(() => call($1, "value-i32", []), 77);

// func.wast:301
assert_return(() => call($1, "value-i64", []), 7_777n);

// func.wast:302
assert_return(() => call($1, "value-f32", []), float32(1_117_480_550));

// func.wast:303
assert_return(() => call($1, "value-f64", []), float64(4_635_172_994_171_566_817n));

// func.wast:304
assert_return(() => call($1, "value-i32-f64", []), 77, float64(4_619_567_317_775_286_272n));

// func.wast:305
assert_return(() => call($1, "value-i32-i32-i32", []), 1, 2, 3);

// func.wast:308
assert_return(() => call($1, "value-block-void", []));

// func.wast:309
assert_return(() => call($1, "value-block-i32", []), 77);

// func.wast:310
assert_return(() => call($1, "value-block-i32-i64", []), 1, 2n);

// func.wast:312
assert_return(() => call($1, "return-empty", []));

// func.wast:313
assert_return(() => call($1, "return-i32", []), 78);

// func.wast:314
assert_return(() => call($1, "return-i64", []), 7_878n);

// func.wast:315
assert_return(() => call($1, "return-f32", []), float32(1_117_611_622));

// func.wast:316
assert_return(() => call($1, "return-f64", []), float64(4_635_244_066_603_186_258n));

// func.wast:317
assert_return(() => call($1, "return-i32-f64", []), 78, float64(4_635_244_066_603_186_258n));

// func.wast:318
assert_return(() => call($1, "return-i32-i32-i32", []), 1, 2, 3);

// func.wast:321
assert_return(() => call($1, "return-block-i32", []), 77);

// func.wast:322
assert_return(() => call($1, "return-block-i32-i64", []), 1, 2n);

// func.wast:324
assert_return(() => call($1, "break-empty", []));

// func.wast:325
assert_return(() => call($1, "break-i32", []), 79);

// func.wast:326
assert_return(() => call($1, "break-i64", []), 7_979n);

// func.wast:327
assert_return(() => call($1, "break-f32", []), float32(1_117_768_909));

// func.wast:328
assert_return(() => call($1, "break-f64", []), float64(4_635_315_139_034_805_699n));

// func.wast:329
assert_return(() => call($1, "break-i32-f64", []), 79, float64(4_635_315_139_034_805_699n));

// func.wast:330
assert_return(() => call($1, "break-i32-i32-i32", []), 1, 2, 3);

// func.wast:333
assert_return(() => call($1, "break-block-i32", []), 77);

// func.wast:334
assert_return(() => call($1, "break-block-i32-i64", []), 1, 2n);

// func.wast:336
assert_return(() => call($1, "break-br_if-empty", [0]));

// func.wast:337
assert_return(() => call($1, "break-br_if-empty", [2]));

// func.wast:338
assert_return(() => call($1, "break-br_if-num", [0]), 51);

// func.wast:339
assert_return(() => call($1, "break-br_if-num", [1]), 50);

// func.wast:340
assert_return(() => call($1, "break-br_if-num-num", [0]), 51, 52n);

// func.wast:343
assert_return(() => call($1, "break-br_if-num-num", [1]), 50, 51n);

// func.wast:347
assert_return(() => call($1, "break-br_table-empty", [0]));

// func.wast:348
assert_return(() => call($1, "break-br_table-empty", [1]));

// func.wast:349
assert_return(() => call($1, "break-br_table-empty", [5]));

// func.wast:350
assert_return(() => call($1, "break-br_table-empty", [-1]));

// func.wast:351
assert_return(() => call($1, "break-br_table-num", [0]), 50);

// func.wast:352
assert_return(() => call($1, "break-br_table-num", [1]), 50);

// func.wast:353
assert_return(() => call($1, "break-br_table-num", [10]), 50);

// func.wast:354
assert_return(() => call($1, "break-br_table-num", [-100]), 50);

// func.wast:355
assert_return(() => call($1, "break-br_table-num-num", [0]), 50, 51n);

// func.wast:358
assert_return(() => call($1, "break-br_table-num-num", [1]), 50, 51n);

// func.wast:361
assert_return(() => call($1, "break-br_table-num-num", [10]), 50, 51n);

// func.wast:364
assert_return(() => call($1, "break-br_table-num-num", [-100]), 50, 51n);

// func.wast:367
assert_return(() => call($1, "break-br_table-nested-empty", [0]));

// func.wast:368
assert_return(() => call($1, "break-br_table-nested-empty", [1]));

// func.wast:369
assert_return(() => call($1, "break-br_table-nested-empty", [3]));

// func.wast:370
assert_return(() => call($1, "break-br_table-nested-empty", [-2]));

// func.wast:371
assert_return(() => call($1, "break-br_table-nested-num", [0]), 52);

// func.wast:374
assert_return(() => call($1, "break-br_table-nested-num", [1]), 50);

// func.wast:377
assert_return(() => call($1, "break-br_table-nested-num", [2]), 52);

// func.wast:380
assert_return(() => call($1, "break-br_table-nested-num", [-3]), 52);

// func.wast:383
assert_return(() => call($1, "break-br_table-nested-num-num", [0]), 101, 52);

// func.wast:387
assert_return(() => call($1, "break-br_table-nested-num-num", [1]), 50, 51);

// func.wast:391
assert_return(() => call($1, "break-br_table-nested-num-num", [2]), 101, 52);

// func.wast:395
assert_return(() => call($1, "break-br_table-nested-num-num", [-3]), 101, 52);

// func.wast:400
assert_return(() => call($1, "large-sig", [0, 1n, float32(1_073_741_824), float32(1_077_936_128), 4, float64(4_617_315_517_961_601_024n), float32(1_086_324_736), 7, 8, 9, float32(1_092_616_192), float64(4_622_382_067_542_392_832n), float64(4_622_945_017_495_814_144n), float64(4_623_507_967_449_235_456n), 14, 15, float32(1_098_907_648)]), float64(4_617_315_517_961_601_024n), float32(1_073_741_824), 0, 8, 7, 1n, float32(1_077_936_128), 9, 4, float32(1_086_324_736), float64(4_623_507_967_449_235_456n), float64(4_622_382_067_542_392_832n), 15, float32(1_098_907_648), 14, float64(4_622_945_017_495_814_144n));

// func.wast:414
assert_return(() => call($1, "init-local-i32", []), 0);

// func.wast:415
assert_return(() => call($1, "init-local-i64", []), 0n);

// func.wast:416
assert_return(() => call($1, "init-local-f32", []), float32(0));

// func.wast:417
assert_return(() => call($1, "init-local-f64", []), float64(0n));

// func.wast:422
let $2 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8c\x80\x80\x80\x00\x03\x60\x01\x7f\x00\x60\x00\x01\x7c\x60\x00\x00\x03\x86\x80\x80\x80\x00\x05\x01\x00\x00\x01\x02\x0a\xbd\x80\x80\x80\x00\x05\x8b\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x8b\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x89\x80\x80\x80\x00\x00\x41\x00\x10\x02\x10\x03\x1a\x0b");

// func.wast:435
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x89\x80\x80\x80\x00\x02\x60\x01\x7f\x00\x60\x00\x01\x7c\x03\x85\x80\x80\x80\x00\x04\x01\x00\x01\x02\x0a\xaf\x80\x80\x80\x00\x04\x8b\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x8b\x80\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x0b\x82\x80\x80\x80\x00\x00\x0b");

// func.wast:447
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:459
let $3 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x8a\x80\x80\x80\x00\x02\x60\x00\x01\x7f\x60\x01\x7f\x01\x7f\x03\x85\x80\x80\x80\x00\x04\x01\x01\x01\x00\x07\x8d\x80\x80\x80\x00\x03\x01\x66\x00\x00\x01\x67\x00\x02\x01\x70\x00\x03\x0a\xb1\x80\x80\x80\x00\x04\x86\x80\x80\x80\x00\x01\x01\x7f\x20\x01\x0b\x86\x80\x80\x80\x00\x01\x01\x7f\x20\x01\x0b\x86\x80\x80\x80\x00\x00\x20\x00\x10\x01\x0b\x8a\x80\x80\x80\x00\x01\x01\x7f\x41\x2a\x21\x00\x20\x00\x0b");

// func.wast:483
assert_return(() => call($3, "f", [42]), 0);

// func.wast:484
assert_return(() => call($3, "g", [42]), 0);

// func.wast:485
assert_return(() => call($3, "p", []), 42);

// func.wast:488
let $4 = instance("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x9d\x80\x80\x80\x00\x04\x60\x00\x00\x60\x00\x00\x60\x08\x7e\x7e\x7c\x7e\x7c\x7e\x7d\x7f\x00\x60\x08\x7c\x7e\x7c\x7e\x7c\x7e\x7d\x7f\x00\x03\x8c\x80\x80\x80\x00\x0b\x00\x03\x00\x03\x03\x02\x02\x00\x00\x00\x00\x04\x85\x80\x80\x80\x00\x01\x70\x01\x07\x07\x07\xf7\x80\x80\x80\x00\x04\x19\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x65\x78\x70\x6c\x69\x63\x69\x74\x2d\x72\x65\x75\x73\x65\x64\x00\x07\x19\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x69\x6d\x70\x6c\x69\x63\x69\x74\x2d\x72\x65\x75\x73\x65\x64\x00\x08\x1c\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x65\x78\x70\x6c\x69\x63\x69\x74\x2d\x64\x75\x70\x6c\x69\x63\x61\x74\x65\x00\x09\x1c\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x69\x6d\x70\x6c\x69\x63\x69\x74\x2d\x64\x75\x70\x6c\x69\x63\x61\x74\x65\x00\x0a\x09\x8d\x80\x80\x80\x00\x01\x00\x41\x00\x0b\x07\x04\x02\x01\x04\x00\x05\x06\x0a\xb0\x82\x80\x80\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x82\x80\x80\x80\x00\x00\x0b\x8c\x80\x80\x80\x00\x00\x41\x01\x11\x00\x00\x41\x04\x11\x00\x00\x0b\x89\x81\x80\x80\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x00\x11\x03\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x02\x11\x03\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x03\x11\x03\x00\x0b\x87\x80\x80\x80\x00\x00\x41\x01\x11\x01\x00\x0b\xce\x80\x80\x80\x00\x00\x42\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x05\x11\x02\x00\x42\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x06\x11\x02\x00\x0b");

// func.wast:551
assert_return(() => call($4, "signature-explicit-reused", []));

// func.wast:552
assert_return(() => call($4, "signature-implicit-reused", []));

// func.wast:553
assert_return(() => call($4, "signature-explicit-duplicate", []));

// func.wast:554
assert_return(() => call($4, "signature-implicit-duplicate", []));

// func.wast:559
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:566
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:573
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:580
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:587
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:594
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:601
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:608
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:615
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:622
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:633
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x01\x01\x7f\x20\x00\x0b");

// func.wast:637
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x01\x01\x7d\x20\x00\x45\x0b");

// func.wast:641
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x02\x01\x7c\x01\x7e\x20\x01\x9a\x0b");

// func.wast:649
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x01\x7f\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x20\x00\x0b");

// func.wast:653
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x01\x7d\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x20\x00\x45\x0b");

// func.wast:657
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x02\x7c\x7e\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x20\x01\x9a\x0b");

// func.wast:665
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b");

// func.wast:669
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b");

// func.wast:673
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b");

// func.wast:677
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7c\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b");

// func.wast:681
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7c\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x88\x80\x80\x80\x00\x01\x82\x80\x80\x80\x00\x00\x0b");

// func.wast:686
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x01\x0b");

// func.wast:692
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x01\x0b");

// func.wast:698
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x41\x00\x0b");

// func.wast:704
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x84\x80\x80\x80\x00\x01\x60\x00\x00\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\x42\x00\x0b");

// func.wast:710
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0b");

// func.wast:716
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7d\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0b");

// func.wast:722
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7d\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x43\x00\x00\x00\x00\x0b");

// func.wast:729
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x0f\x0b");

// func.wast:735
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x89\x80\x80\x80\x00\x01\x83\x80\x80\x80\x00\x00\x0f\x0b");

// func.wast:741
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x01\x0f\x0b");

// func.wast:747
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x01\x0f\x0b");

// func.wast:753
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x42\x00\x0f\x0b");

// func.wast:759
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7e\x7e\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x42\x00\x0f\x0b");

// func.wast:766
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8b\x80\x80\x80\x00\x01\x85\x80\x80\x80\x00\x00\x0f\x41\x01\x0b");

// func.wast:772
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x0f\x41\x01\x41\x02\x0b");

// func.wast:778
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x41\x01\x0f\x41\x02\x0b");

// func.wast:784
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x01\x0f\x41\x01\x0b");

// func.wast:790
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x01\x0f\x41\x01\x0b");

// func.wast:796
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8d\x80\x80\x80\x00\x01\x87\x80\x80\x80\x00\x00\x42\x01\x0f\x41\x01\x0b");

// func.wast:802
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x42\x01\x0f\x41\x01\x41\x02\x0b");

// func.wast:808
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x01\x0f\x41\x01\x0f\x0b");

// func.wast:814
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x41\x01\x0f\x41\x01\x41\x02\x0f\x0b");

// func.wast:821
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x0c\x00\x0b");

// func.wast:827
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8a\x80\x80\x80\x00\x01\x84\x80\x80\x80\x00\x00\x0c\x00\x0b");

// func.wast:833
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8f\x80\x80\x80\x00\x01\x89\x80\x80\x80\x00\x00\x43\x00\x00\x00\x00\x0c\x00\x0b");

// func.wast:839
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x41\x00\x0c\x00\x0b");

// func.wast:845
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8c\x80\x80\x80\x00\x01\x86\x80\x80\x80\x00\x00\x0c\x00\x41\x01\x0b");

// func.wast:851
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x0c\x00\x41\x01\x41\x02\x0b");

// func.wast:857
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x8e\x80\x80\x80\x00\x01\x88\x80\x80\x80\x00\x00\x42\x01\x0c\x00\x41\x01\x0b");

// func.wast:863
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x41\x01\x0c\x00\x41\x01\x41\x02\x0b");

// func.wast:869
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x90\x80\x80\x80\x00\x01\x8a\x80\x80\x80\x00\x00\x42\x01\x0c\x00\x41\x01\x0c\x00\x0b");

// func.wast:876
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x91\x80\x80\x80\x00\x01\x8b\x80\x80\x80\x00\x00\x02\x40\x0c\x01\x0b\x41\x01\x0c\x00\x0b");

// func.wast:882
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x0c\x01\x0b\x41\x01\x41\x02\x0c\x00\x0b");

// func.wast:888
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x92\x80\x80\x80\x00\x01\x8c\x80\x80\x80\x00\x00\x02\x40\x01\x0c\x01\x0b\x41\x01\x0c\x00\x0b");

// func.wast:894
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x94\x80\x80\x80\x00\x01\x8e\x80\x80\x80\x00\x00\x02\x40\x01\x0c\x01\x0b\x41\x01\x41\x02\x0c\x00\x0b");

// func.wast:900
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x85\x80\x80\x80\x00\x01\x60\x00\x01\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x93\x80\x80\x80\x00\x01\x8d\x80\x80\x80\x00\x00\x02\x40\x42\x01\x0c\x01\x0b\x41\x01\x0c\x00\x0b");

// func.wast:906
assert_invalid("\x00\x61\x73\x6d\x01\x00\x00\x00\x01\x86\x80\x80\x80\x00\x01\x60\x00\x02\x7f\x7f\x03\x82\x80\x80\x80\x00\x01\x00\x0a\x95\x80\x80\x80\x00\x01\x8f\x80\x80\x80\x00\x00\x02\x7f\x41\x01\x0c\x01\x0b\x41\x01\x41\x02\x0c\x00\x0b");

// func.wast:916
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:920
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:924
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:928
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:932
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:936
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:943
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:947
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:951
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:956
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:958
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");

// func.wast:960
assert_malformed("\x3c\x6d\x61\x6c\x66\x6f\x72\x6d\x65\x64\x20\x71\x75\x6f\x74\x65\x3e");
